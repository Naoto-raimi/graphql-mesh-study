sources:
  # REST
  - name: Books
    handler:
      openapi:
        source: http://localhost:3002/openapi.json
        operationHeaders:
          Cache-Control: max-age=10

  # GraphQL
  - name: Stores
    handler:
      graphql:
        endpoint: http://0.0.0.0:3004/graphql

  # GRPC
  - name: Authors
    handler:
      grpc:
        endpoint: localhost:3003

  # SOAP
  - name: Hello
    handler:
      soap:
        source: ./schema_files/soap/hello_soap11.wsdl
  - name: RefillOrder
    handler:
      soap:
        source: ./schema_files/soap/refillOrder_soap11.wsdl

  # - name: GetStockPrice # dateでエラー,soap1.1でもsoap1.2でも変わらない
  #   handler:
  #     soap:
  #       source: ./schema_files/soap/getStockPrice_soap11.wsdl

  # - name: GetExchangeRate # dateでエラー
  #   handler:
  #     soap:
  #       source: ./schema_files/soap/getExchangeRate_soap11.wsdl

  # - name: Reservation # complexContentでエラー
  #   handler:
  #     soap:
  #       source: ./schema_files/soap/reservation_soap11.wsdl

  # - name: Registration # complexContentでエラー
  #   handler:
  #     soap:
  #       source: ./schema_files/soap/registration_soap11.wsdl

  # DataSource
  - name: FridgeStock
    handler:
      postgraphile:
        connectionString: postgres://postgres:postgres@localhost:5432/postgres
        appendPlugins:
          - "postgraphile-plugin-connection-filter"

transforms:
  - rename: # 自動生成された名前をリネームできる
      renames:
        - from:
            type: Query
            field: AppController_(.*)
          to:
            type: Query
            field: $1
          useRegExpForFields: true
        - from:
            type: Query
            field: authors_v1_AuthorsService_(.*)
          to:
            type: Query
            field: $1
          useRegExpForFields: true
  # - filterSchema: # schemaをfilterできる
  #     filters:
  #       - Query.stores
  #       - Query.!bookSells
  #       - Query.!{book, categories}
  #       - Query.!authors_v1_AuthorsService_{connectivityState, GetAuthor}

# plugins:
# - httpCache:  # caching in Http
#     matches:
#       - "http://localhost:3002"

# - responseCache:  # response cache
#     ttlPerCoordinate:
#       - coordinate: bookSells
#         ttl: 50000
#       - coordinate: Book
#         ttl: 40000
#     includeExtensionMetadata: true

# - maskedErrors:
#       errorMessage: "Something went wrong."

# - operationFieldPermissions:
#     permissions:
#       - if: "context.request.headers.get('x-consumer-username') === 'admin'"
#         allow:
#           - "*"

#       - if: "context.request.headers.get('x-consumer-username') === 'fridgeStock'"
#         allow:
#           - "Query.fridgeStock*"
#           - "Query.*FridgeStock*"
#           - "FridgeStock.*"
#           - "Mutation.*FridgeStock"
#           - "Mutation.*FridgeStock*"
#           - "CreateFridgeStockPayload.*"
#           - "UpdateFridgeStockPayload.*"
#           - "DeleteFridgeStockPayload.*"
#           # - "*FridgeStockPayload.*" # これはできない

additionalTypeDefs: |
  extend type authors_v1_Author {
    namePlusId: String!
  }
  extend type Store {
    bookSells: [Sells!]!
  }
  extend type Sells {
   book: Book
  }
  extend type Book {
    author: authors_v1_Author
  }
  extend type Query {
    filterBooks(authorId: String): [Book]
  }

additionalResolvers:
  - "./author.resolvers"
  - "./filterBooks.resolver"
  - "./resolvers"
